$grid-columns: 12;
$grid-margin: rem(50px);
$grid-gutter: rem(20px);
$gird-gutters: rem(0px), rem(8px), rem(12px), rem(16px);

.container {
  margin: 0 $grid-margin;
}

.row {
  overflow: hidden;
  display: flex;
  flex-wrap: wrap;
  margin: calc($grid-gutter / -2);

  & > * {
    padding: calc($grid-gutter / 2);
  }
}

@for $i from 1 through length($gird-gutters) {
  $n: $i - 1;
  .row-#{$n} {
    overflow: hidden;
    display: flex;
    flex-wrap: wrap;
    margin: calc(nth($gird-gutters, $i) / -2);
    & > * {
      padding: calc(nth($gird-gutters, $i) / 2);
    }
  }
}

@mixin col($i) {
  $w: calc($i * 100 / $grid-columns) * 1%;
  flex: 0 0 $w;
  //padding: calc($grid-gutter / 2);
  box-sizing: border-box;
}

.col {
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
  padding: calc($grid-gutter / 2);
  box-sizing: border-box;
}

@for $i from 1 through $grid-columns {
  .col-#{$i} {
    @include col($i);
  }
}

@media screen and (max-width: $lg) {
  @for $i from 1 through 12 {
    .col-lg-#{$i} {
      @include col($i);
    }
  }

  .col-lg {
    flex: 0 0 auto;

    padding: calc($grid-gutter / 2);
    box-sizing: border-box;
  }
}

@media screen and (max-width: $md) {
  @for $i from 1 through $grid-columns {
    .col-md-#{$i} {
      @include col($i);
    }
  }
  .col-md {
    flex: 0 0 auto;

    padding: calc($grid-gutter / 2);
    box-sizing: border-box;
  }
}

@media screen and (max-width: $sm) {
  @for $i from 1 through $grid-columns {
    .col-sm-#{$i} {
      @include col($i);
    }
  }
  .col-sm {
    flex: 0 0 auto;
    padding: calc($grid-gutter / 2);
    box-sizing: border-box;
  }
}

@media screen and (max-width: $md) {
  .container {
    margin: 0 calc($grid-margin / 2);
  }
}
